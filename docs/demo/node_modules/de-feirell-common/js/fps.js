/**
 * The FPSCounter is a class used to creat an istance which is useful to determine how many frames per second this current render engine archives
 * 
 * @fires FPSCounter#fpsrefresh
 * @class
 * @param {number} precision the precision of the mesurement, after how many frames the fps should be calculated. A smaller number yields a more fluctuating result.
 */
function FPSCounter(precision) {
    precision = parseInt(precision);

    if (!isFinite(precision) || precision < 1)
        precision = 10;

    /**
     * the last measured fps
     * 
     * @member {number} FPSCounter#fps
     */

    var stack = 0,
        startTime = 0,
        fps = NaN;

    Object.defineProperty(this, 'fps', {
        get: () => fps
    });

    /**
     * fpsrefresh event.
     *
     * @event FPSCounter#fpsrefresh
     * @type {object}
     * @property {number} fps the currently measured fps
     */

    Object.makeEventManager(this, ['fpsrefresh']);

    let loop = (function (t) {
        if (stack == 0)
            startTime = t

        if (stack == precision) {
            fps = Math.round(1000 / ((t - startTime) / precision));
            this.dispatchEvent('fpsrefresh', {
                fps: fps
            });

            stack = 0;
        } else {
            stack++;
        }

        window.requestAnimationFrame(loop);
    }).bind(this);

    window.requestAnimationFrame(loop);
}